Web App Example

Node based app
1. alpine envrionment
2. node and npm install
3. copy executable into src
4. workdir is src
5. npm install to update/install all dependencies

steps
1. cd psweb
2. docker image build -t web:latest
3. docker image ls
4. first port (here 80) is our system port and second port is where the application is exposed inside container(here 8080)

docker container run -d --name c1 -p 80:8080 web:latest

5. history and layers information
docker image history web:latest

6.checking image details
docker image inspect web:latest

Note: if we don't give our systems port, it allocates random by default but we can not use the allocated one it will throw error - already allocated.

Django-python based App
1. create app
django-admin startproject mysite
2. create requirements.txt for dependency
 pip3 freeze > requirements.txt
Note: select dependencies which you are using otherwise it gives all from system

3. create Dockerfile
FROM python:3.9.7-alpine

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN pip install --upgrade pip
COPY ./requirements.txt /usr/src/app
RUN pip install -r requirements.txt

COPY . /usr/src/app

EXPOSE 8000

CMD ["python", "manage.py" ,"runserver", "0.0.0.0:8000"]

4. build image
docker image build -t mysite:latest .
5. run container
docker container run -d --name c1 -p 85:8000 mysite:latest
6. go to browser and open 
http://127.0.0.1:85/













